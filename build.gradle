plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
    id 'jacoco'
}

repositories {
    mavenCentral()
}

subprojects { // 모든 하위 모듈들에 이 설정을 적용
    group 'com.onetwo'
    version '0.0.1-SNAPSHOT'
    sourceCompatibility = '21'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    buildscript {
        ext {
            queryDslVersion = "5.0.0"
        }
    }

    ext {
        set('springCloudVersion', "2024.0.0")
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    jacoco {
        toolVersion = "0.8.11"
        reportsDirectory = layout.buildDirectory.dir('reports/jacoco')
    }

    jacocoTestReport {
        dependsOn test
        reports {
            html.required = true
            xml.required = true
        }
        // exclude class, package from coverage report
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect { // exclude class
                fileTree(dir: it, exclude: [
                        '**/EstateServiceApplication.class',
                        '**/DiscoveryServiceApplication.class',
                        '**/GisApiGatewayApplication.class', // exclude main class\
                        '**/filter/**', // exclude filter package
                        '**/dto/**', // exclude dto package
                        '**/exception/**', // exclude exception package
                        '**/config/**', // exclude config package
                        '**/generated/**' // exclude generated package
                ])
            }))
        }
    }

    jacocoTestCoverageVerification {
        // exclude class, package from coverage verification
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect { // exclude class
                fileTree(dir: it, exclude: [
                        '**/EstateServiceApplication.class',
                        '**/DiscoveryServiceApplication.class',
                        '**/GisApiGatewayApplication.class', // exclude main class
                        '**/filter/**', // exclude filter package
                        '**/dto/**', // exclude dto package
                        '**/exception/**', // exclude exception package
                        '**/config/**', // exclude config package
                        '**/generated/**' // exclude generated package
                ])
            }))
        }
        violationRules {
            rule {
                element = 'BUNDLE'
                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.1
                }
                limit {
                    counter = 'BRANCH'
                    value = 'COVEREDRATIO'
                    minimum = 0.1
                }
            }
        }
    }

    dependencies { // 모든 하위 모듈에 추가 될 의존성 목록
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
        finalizedBy jacocoTestCoverageVerification
    }
}